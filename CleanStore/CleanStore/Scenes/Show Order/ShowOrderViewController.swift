//
//  ShowOrderViewController.swift
//  CleanStore
//
//  Created by Anton on 17.05.2018.
//  Copyright (c) 2018 fynjyass. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowOrderDisplayLogic: class {
    func displayOrder(viewModel: ShowOrder.GetOrder.ViewModel)
}

class ShowOrderViewController: UIViewController, ShowOrderDisplayLogic {
    
    var interactor: ShowOrderBusinessLogic?
    var router: (NSObjectProtocol & ShowOrderRoutingLogic & ShowOrderDataPassing)?
    
    //MARK - Outlets
    @IBOutlet weak var idLabel: UILabel!
    @IBOutlet weak var dateLabel: UILabel!
    @IBOutlet weak var emailLabel: UILabel!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var totalLabel: UILabel!
    
    //MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    //MARK: View lifecycle
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        getOrder()
    }
    
    func getOrder() {
        let request = ShowOrder.GetOrder.Request()
        interactor?.getOrder(request: request)
    }
    
    func displayOrder(viewModel: ShowOrder.GetOrder.ViewModel) {
        let displayedOrder = viewModel.displayedOrder
        idLabel.text = displayedOrder.id
        dateLabel.text = displayedOrder.date
        emailLabel.text = displayedOrder.email
        nameLabel.text = displayedOrder.name
        totalLabel.text = displayedOrder.total
    }
    
    //MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ShowOrderInteractor()
        let presenter = ShowOrderPresenter()
        let router = ShowOrderRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    //MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
}
